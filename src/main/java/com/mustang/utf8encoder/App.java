package com.mustang.utf8encoder;

import java.io.ByteArrayInputStream;
import java.io.FileOutputStream;
import java.io.IOException;
import java.nio.charset.Charset;

public class App {
    public static void main(String... args) throws IOException {
        byte[] buf = {
                // English
                0x00, 0x00, 0x00, 0x41,
                0x00, 0x00, 0x00, 0x42,
                0x00, 0x00, 0x00, 0x43,
                0x00, 0x00, 0x00, 0x44,
                
                0x00, 0x00, 0x00, 0x0A,
                
                // Chinese
                0x00, 0x00, 0x56, 0x05,
                0x00, 0x00, 0x56, 0x06,
                0x00, 0x00, 0x56, 0x07,
                0x00, 0x00, 0x56, 0x08,
                
                0x00, 0x00, 0x00, 0x0A,
                
                // Greek Capital
                0x00, 0x00, 0x03, (byte) 0x91,
                0x00, 0x00, 0x03, (byte) 0x92,
                0x00, 0x00, 0x03, (byte) 0x93,
                0x00, 0x00, 0x03, (byte) 0x94,
                0x00, 0x00, 0x03, (byte) 0x95,
                0x00, 0x00, 0x03, (byte) 0x96,
                0x00, 0x00, 0x03, (byte) 0x97,
                0x00, 0x00, 0x03, (byte) 0x98,
                0x00, 0x00, 0x03, (byte) 0x99,
                0x00, 0x00, 0x03, (byte) 0xA0,
                0x00, 0x00, 0x03, (byte) 0xA1,
                0x00, 0x00, 0x03, (byte) 0xA2,
                0x00, 0x00, 0x03, (byte) 0xA3,
                0x00, 0x00, 0x03, (byte) 0xA4,
                0x00, 0x00, 0x03, (byte) 0xA5,
                0x00, 0x00, 0x03, (byte) 0xA6,
                0x00, 0x00, 0x03, (byte) 0xA7,
                0x00, 0x00, 0x03, (byte) 0xA8,
                0x00, 0x00, 0x03, (byte) 0xA9,
                
                0x00, 0x00, 0x00, 0x0A,
                
                // Greek Small
                0x00, 0x00, 0x03, (byte) 0xB1,
                0x00, 0x00, 0x03, (byte) 0xB2,
                0x00, 0x00, 0x03, (byte) 0xB3,
                0x00, 0x00, 0x03, (byte) 0xB4,
                0x00, 0x00, 0x03, (byte) 0xB5,
                0x00, 0x00, 0x03, (byte) 0xB6,
                0x00, 0x00, 0x03, (byte) 0xB7,
                0x00, 0x00, 0x03, (byte) 0xB8,
                0x00, 0x00, 0x03, (byte) 0xB9,
                0x00, 0x00, 0x03, (byte) 0xC1,
                0x00, 0x00, 0x03, (byte) 0xC2,
                0x00, 0x00, 0x03, (byte) 0xC3,
                0x00, 0x00, 0x03, (byte) 0xC4,
                0x00, 0x00, 0x03, (byte) 0xC5,
                0x00, 0x00, 0x03, (byte) 0xC6,
                0x00, 0x00, 0x03, (byte) 0xC7,
                0x00, 0x00, 0x03, (byte) 0xC8,
                0x00, 0x00, 0x03, (byte) 0xC9
        };
        
        ByteArrayInputStream inputStream = new ByteArrayInputStream(buf);
        FileOutputStream fileOutputStream = new FileOutputStream("test.txt");
        UTF8Encoder utf8Encoder = new UTF8Encoder(inputStream, fileOutputStream, Charset.forName("UTF-32"));
//        utf8Encoder.setWriteBOM(true);
        utf8Encoder.convert();
    }
}
